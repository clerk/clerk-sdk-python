"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from clerk_backend_api.types import BaseModel, Nullable, UNSET_SENTINEL
from enum import Enum
from pydantic import model_serializer
from typing_extensions import TypedDict


class ProxyCheckObject(str, Enum):
    PROXY_CHECK = "proxy_check"


class ProxyCheckTypedDict(TypedDict):
    r"""Health check information about a domain's proxy configuration validation attempt."""

    object: ProxyCheckObject
    id: str
    domain_id: str
    last_run_at: Nullable[int]
    r"""Unix timestamp of last run.

    """
    proxy_url: str
    successful: bool
    created_at: int
    r"""Unix timestamp of creation.

    """
    updated_at: int
    r"""Unix timestamp of last update.

    """


class ProxyCheck(BaseModel):
    r"""Health check information about a domain's proxy configuration validation attempt."""

    object: ProxyCheckObject

    id: str

    domain_id: str

    last_run_at: Nullable[int]
    r"""Unix timestamp of last run.

    """

    proxy_url: str

    successful: bool

    created_at: int
    r"""Unix timestamp of creation.

    """

    updated_at: int
    r"""Unix timestamp of last update.

    """

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = []
        nullable_fields = ["last_run_at"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
