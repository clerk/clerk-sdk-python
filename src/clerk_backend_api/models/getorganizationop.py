"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from clerk_backend_api.types import BaseModel
from clerk_backend_api.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetOrganizationRequestTypedDict(TypedDict):
    organization_id: str
    r"""The ID or slug of the organization"""
    include_members_count: NotRequired[bool]
    r"""Flag to denote whether or not the organization's members count should be included in the response."""
    include_missing_member_with_elevated_permissions: NotRequired[bool]
    r"""Flag to denote whether or not to include a member with elevated permissions who is not currently a member of the organization."""


class GetOrganizationRequest(BaseModel):
    organization_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The ID or slug of the organization"""

    include_members_count: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Flag to denote whether or not the organization's members count should be included in the response."""

    include_missing_member_with_elevated_permissions: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Flag to denote whether or not to include a member with elevated permissions who is not currently a member of the organization."""
