"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .clerkerror import ClerkError
from clerk_backend_api.models import ClerkBaseError
from clerk_backend_api.types import BaseModel
import httpx
from typing import List, Optional
from typing_extensions import TypedDict


class ClerkErrorsMetaTypedDict(TypedDict):
    pass


class ClerkErrorsMeta(BaseModel):
    pass


class ClerkErrorsData(BaseModel):
    errors: List[ClerkError]

    meta: Optional[ClerkErrorsMeta] = None


class ClerkErrors(ClerkBaseError):
    r"""Request was not successful"""

    data: ClerkErrorsData

    def __init__(
        self,
        data: ClerkErrorsData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
