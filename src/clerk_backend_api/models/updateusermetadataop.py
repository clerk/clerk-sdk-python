"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from clerk_backend_api.types import BaseModel
from clerk_backend_api.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class UpdateUserMetadataRequestBodyTypedDict(TypedDict):
    public_metadata: NotRequired[Dict[str, Any]]
    r"""Metadata saved on the user, that is visible to both your frontend and backend.
    The new object will be merged with the existing value.
    """
    private_metadata: NotRequired[Dict[str, Any]]
    r"""Metadata saved on the user that is only visible to your backend.
    The new object will be merged with the existing value.
    """
    unsafe_metadata: NotRequired[Dict[str, Any]]
    r"""Metadata saved on the user, that can be updated from both the Frontend and Backend APIs.
    The new object will be merged with the existing value.

    Note: Since this data can be modified from the frontend, it is not guaranteed to be safe.
    """
    

class UpdateUserMetadataRequestBody(BaseModel):
    public_metadata: Optional[Dict[str, Any]] = None
    r"""Metadata saved on the user, that is visible to both your frontend and backend.
    The new object will be merged with the existing value.
    """
    private_metadata: Optional[Dict[str, Any]] = None
    r"""Metadata saved on the user that is only visible to your backend.
    The new object will be merged with the existing value.
    """
    unsafe_metadata: Optional[Dict[str, Any]] = None
    r"""Metadata saved on the user, that can be updated from both the Frontend and Backend APIs.
    The new object will be merged with the existing value.

    Note: Since this data can be modified from the frontend, it is not guaranteed to be safe.
    """
    

class UpdateUserMetadataRequestTypedDict(TypedDict):
    user_id: str
    r"""The ID of the user whose metadata will be updated and merged"""
    request_body: NotRequired[UpdateUserMetadataRequestBodyTypedDict]
    

class UpdateUserMetadataRequest(BaseModel):
    user_id: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""The ID of the user whose metadata will be updated and merged"""
    request_body: Annotated[Optional[UpdateUserMetadataRequestBody], FieldMetadata(request=RequestMetadata(media_type="application/json"))] = None
    
