"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from clerk_backend_api.types import BaseModel
from clerk_backend_api.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from enum import Enum
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TemplateType(str, Enum):
    r"""The type of templates to list (email or SMS)"""

    EMAIL = "email"
    SMS = "sms"


class GetTemplateListRequestTypedDict(TypedDict):
    template_type: TemplateType
    r"""The type of templates to list (email or SMS)"""
    paginated: NotRequired[bool]
    r"""Whether to paginate the results.
    If true, the results will be paginated.
    If false, the results will not be paginated.
    """
    limit: NotRequired[int]
    r"""Applies a limit to the number of results returned.
    Can be used for paginating the results together with `offset`.
    """
    offset: NotRequired[int]
    r"""Skip the first `offset` results when paginating.
    Needs to be an integer greater or equal to zero.
    To be used in conjunction with `limit`.
    """


class GetTemplateListRequest(BaseModel):
    template_type: Annotated[
        TemplateType,
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The type of templates to list (email or SMS)"""

    paginated: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Whether to paginate the results.
    If true, the results will be paginated.
    If false, the results will not be paginated.
    """

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 10
    r"""Applies a limit to the number of results returned.
    Can be used for paginating the results together with `offset`.
    """

    offset: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 0
    r"""Skip the first `offset` results when paginating.
    Needs to be an integer greater or equal to zero.
    To be used in conjunction with `limit`.
    """
