"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from clerk_backend_api.types import BaseModel
from enum import Enum
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class ActorTokenObject(str, Enum):
    ACTOR_TOKEN = "actor_token"


class ActorTokenStatus(str, Enum):
    PENDING = "pending"
    ACCEPTED = "accepted"
    REVOKED = "revoked"


class ActorTokenActorTypedDict(TypedDict):
    pass


class ActorTokenActor(BaseModel):
    pass


class ActorTokenTypedDict(TypedDict):
    r"""Success"""

    object: ActorTokenObject
    id: str
    status: ActorTokenStatus
    user_id: str
    actor: ActorTokenActorTypedDict
    created_at: int
    r"""Unix timestamp of creation.

    """
    updated_at: int
    r"""Unix timestamp of last update.

    """
    token: NotRequired[str]
    url: NotRequired[str]


class ActorToken(BaseModel):
    r"""Success"""

    object: ActorTokenObject

    id: str

    status: ActorTokenStatus

    user_id: str

    actor: ActorTokenActor

    created_at: int
    r"""Unix timestamp of creation.

    """

    updated_at: int
    r"""Unix timestamp of last update.

    """

    token: Optional[str] = None

    url: Optional[str] = None
