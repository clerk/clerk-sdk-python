"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from clerk_backend_api.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from clerk_backend_api.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from pydantic import model_serializer
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class CreateOrganizationInvitationPublicMetadataTypedDict(TypedDict):
    r"""Metadata saved on the organization invitation, read-only from the Frontend API and fully accessible (read/write) from the Backend API."""
    
    

class CreateOrganizationInvitationPublicMetadata(BaseModel):
    r"""Metadata saved on the organization invitation, read-only from the Frontend API and fully accessible (read/write) from the Backend API."""
    
    

class CreateOrganizationInvitationPrivateMetadataTypedDict(TypedDict):
    r"""Metadata saved on the organization invitation, fully accessible (read/write) from the Backend API but not visible from the Frontend API."""
    
    

class CreateOrganizationInvitationPrivateMetadata(BaseModel):
    r"""Metadata saved on the organization invitation, fully accessible (read/write) from the Backend API but not visible from the Frontend API."""
    
    

class CreateOrganizationInvitationRequestBodyTypedDict(TypedDict):
    email_address: str
    r"""The email address of the new member that is going to be invited to the organization"""
    role: str
    r"""The role of the new member in the organization"""
    inviter_user_id: NotRequired[Nullable[str]]
    r"""The ID of the user that invites the new member to the organization.
    Must be an administrator in the organization.
    """
    public_metadata: NotRequired[CreateOrganizationInvitationPublicMetadataTypedDict]
    r"""Metadata saved on the organization invitation, read-only from the Frontend API and fully accessible (read/write) from the Backend API."""
    private_metadata: NotRequired[CreateOrganizationInvitationPrivateMetadataTypedDict]
    r"""Metadata saved on the organization invitation, fully accessible (read/write) from the Backend API but not visible from the Frontend API."""
    redirect_url: NotRequired[str]
    r"""Optional URL that the invitee will be redirected to once they accept the invitation by clicking the join link in the invitation email."""
    

class CreateOrganizationInvitationRequestBody(BaseModel):
    email_address: str
    r"""The email address of the new member that is going to be invited to the organization"""
    role: str
    r"""The role of the new member in the organization"""
    inviter_user_id: OptionalNullable[str] = UNSET
    r"""The ID of the user that invites the new member to the organization.
    Must be an administrator in the organization.
    """
    public_metadata: Optional[CreateOrganizationInvitationPublicMetadata] = None
    r"""Metadata saved on the organization invitation, read-only from the Frontend API and fully accessible (read/write) from the Backend API."""
    private_metadata: Optional[CreateOrganizationInvitationPrivateMetadata] = None
    r"""Metadata saved on the organization invitation, fully accessible (read/write) from the Backend API but not visible from the Frontend API."""
    redirect_url: Optional[str] = None
    r"""Optional URL that the invitee will be redirected to once they accept the invitation by clicking the join link in the invitation email."""
    
    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["inviter_user_id", "public_metadata", "private_metadata", "redirect_url"]
        nullable_fields = ["inviter_user_id"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (self.__pydantic_fields_set__.intersection({n}) or k in null_default_fields) # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
        

class CreateOrganizationInvitationRequestTypedDict(TypedDict):
    organization_id: str
    r"""The ID of the organization for which to send the invitation"""
    request_body: CreateOrganizationInvitationRequestBodyTypedDict
    

class CreateOrganizationInvitationRequest(BaseModel):
    organization_id: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""The ID of the organization for which to send the invitation"""
    request_body: Annotated[CreateOrganizationInvitationRequestBody, FieldMetadata(request=RequestMetadata(media_type="application/json"))]
    
