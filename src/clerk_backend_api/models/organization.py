"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from clerk_backend_api.types import BaseModel
from enum import Enum
from typing import Any, Dict, Optional
from typing_extensions import NotRequired, TypedDict


class OrganizationObject(str, Enum):
    ORGANIZATION = "organization"


class OrganizationTypedDict(TypedDict):
    object: OrganizationObject
    id: str
    name: str
    slug: str
    has_image: bool
    max_allowed_memberships: int
    admin_delete_enabled: bool
    public_metadata: Dict[str, Any]
    created_at: int
    r"""Unix timestamp of creation.

    """
    updated_at: int
    r"""Unix timestamp of last update.

    """
    image_url: NotRequired[str]
    members_count: NotRequired[int]
    missing_member_with_elevated_permissions: NotRequired[bool]
    pending_invitations_count: NotRequired[int]
    private_metadata: NotRequired[Dict[str, Any]]
    created_by: NotRequired[str]


class Organization(BaseModel):
    object: OrganizationObject

    id: str

    name: str

    slug: str

    has_image: bool

    max_allowed_memberships: int

    admin_delete_enabled: bool

    public_metadata: Dict[str, Any]

    created_at: int
    r"""Unix timestamp of creation.

    """

    updated_at: int
    r"""Unix timestamp of last update.

    """

    image_url: Optional[str] = None

    members_count: Optional[int] = None

    missing_member_with_elevated_permissions: Optional[bool] = None

    pending_invitations_count: Optional[int] = None

    private_metadata: Optional[Dict[str, Any]] = None

    created_by: Optional[str] = None
