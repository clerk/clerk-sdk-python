"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from clerk_backend_api.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from clerk_backend_api.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from pydantic import model_serializer
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class RevokeOrganizationInvitationRequestBodyTypedDict(TypedDict):
    requesting_user_id: NotRequired[Nullable[str]]
    r"""The ID of the user that revokes the invitation.
    Must be an administrator in the organization.
    """
    

class RevokeOrganizationInvitationRequestBody(BaseModel):
    requesting_user_id: OptionalNullable[str] = UNSET
    r"""The ID of the user that revokes the invitation.
    Must be an administrator in the organization.
    """
    
    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["requesting_user_id"]
        nullable_fields = ["requesting_user_id"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (self.__pydantic_fields_set__.intersection({n}) or k in null_default_fields) # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
        

class RevokeOrganizationInvitationRequestTypedDict(TypedDict):
    organization_id: str
    r"""The organization ID."""
    invitation_id: str
    r"""The organization invitation ID."""
    request_body: NotRequired[RevokeOrganizationInvitationRequestBodyTypedDict]
    

class RevokeOrganizationInvitationRequest(BaseModel):
    organization_id: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""The organization ID."""
    invitation_id: Annotated[str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))]
    r"""The organization invitation ID."""
    request_body: Annotated[Optional[RevokeOrganizationInvitationRequestBody], FieldMetadata(request=RequestMetadata(media_type="application/json"))] = None
    
